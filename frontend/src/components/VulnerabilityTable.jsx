// src/components/VulnerabilityTable.jsx
import React from 'react';
import { format } from 'date-fns';

export default function VulnerabilityTable({ limit }) {
  const [vulnerabilities, setVulnerabilities] = React.useState([]);
  const [loading, setLoading] = React.useState(true);

  React.useEffect(() => {
    fetch(`/api/vulnerabilities${limit ? `?limit=${limit}` : ''}`)
      .then(res => res.json())
      .then(data => {
        setVulnerabilities(data);
        setLoading(false);
      });
  }, [limit]);

  if (loading) {
    return <div>Loading...</div>;
  }

  return (
    <div className="overflow-x-auto">
      <table className="min-w-full divide-y divide-gray-200">
        <thead className="bg-gray-50">
          <tr>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Title</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Severity</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Published Date</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
          </tr>
        </thead>
        <tbody className="bg-white divide-y divide-gray-200">
          {vulnerabilities.map(vuln => (
            <tr key={vuln.id}>
              <td className="px-6 py-4">{vuln.title}</td>
              <td className="px-6 py-4">
                <span className={`px-2 py-1 rounded-full text-xs ${
                  vuln.severity === 'Critical' ? 'bg-red-100 text-red-800' : 'bg-orange-100 text-orange-800'
                }`}>
                  {vuln.severity}
                </span>
              </td>
              <td className="px-6 py-4">{format(new Date(vuln.publishedDate), 'MMM d, yyyy')}</td>
              <td className="px-6 py-4">{vuln.status}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}